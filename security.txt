Spring Security - модуль фреймворка Spring позволяющий реализовать работу с правами доступа в прилоожении (требование
авторизации либо наличие определенной роли для выполнения действий). Spring security позволяет реализовать различные
сценарии автоизации которые могут сильно друг от друга отличаться . В реализуемом приложении магазина нам подходит вариант
авторизации по логину и паролю соответсвенно, данный тип авторизации в Spring Security является самым базовым.

Для работы с самой базовой схемой авторизации по логину и паролю нам необходимо знать следующие обьекты:

 1) UserDetails -  интерфейс описывающий сущность от лица которой будет производиться работа в контексте авторизации
 (пользователь с точки зрения Spring Security).Обьект UserDetails состоит из имени пользователя,пароля,и прав доступа
 (коллекция обьектов GrantedAuthority).

 Spring Security -> UserDetails (+) -> User (-) -> Приложение.


 2) GrantedAuthority - интерфейс описывающий права доступа в контексте Spring Security. Любое время доступа в Spring
 Security. Любое право доступа в Spring Security представляет собой обычную строку с названием этого права (canViewUserList,
 canBlockOtherUsers и так далее). Некоторые права доступа могут называться ролями если их название начинается с префикса
 Role_ (ROLE_ADMIN,ROLE_USER etc.)

 3) UserDetailsService - интерфейс описывающий обьект с единственным методом для раелизации логики поиска и формирования
 обьекта UserDetails по преданному через параметры имени пользователя. Грубо говоря при помощи данного метода мы должны
 обяьснит фреймворку где он должен искать пользователя.

 4) SecurityFilterChain - обьект представляющий собой цепочку фильтров в которой записаны правила для доступа к ресурсам.
 Данный обьект необходимо инициализировать на этапе конфигурации приложения при помощи аннотации @Bean.

 5)


PasswordEncoder - Spring Security по своей специвике требует шифрование
паролей пользователей в хранилище, шифровка паролей и их сопоставление достигается использование обьекты PasswordEncoder
(каждая отдельно взятая реализация описывает свой алгоритм шифрования) из коробки